 /*-----------------------------------------------------------------------------------------
 LIBRARY: SSME_EXPERIMENTS
 COMPONENT: Junction_GasGen
 PARTITION: Prueba
 EXPERIMENT: exp1
 TEMPLATE: TRANSIENT
 CREATION DATE: 05/03/2019
-----------------------------------------------------------------------------------------*/

EXPERIMENT exp1 ON Junction_GasGen.Prueba
   DECLS
   OBJECTS
   INIT
      -- initial values for algebraics
      GasGen_1.W_F = 0.5
      GasGen_2.W_F = 0.5
      Junction_la_buena_1.M_in2 = 0.3
      Junction_la_buena_1.M_out = 0.3
      Turbine_1.M_2 = 0.9
      Turbine_1.U = 500

   BOUNDS
      -- Set equations for boundaries: boundVar = f(TIME;...)
      Inlet_1.Tt = 288.15
      Inlet_1.pt = 5700000
      Inlet_2.Tt = 288.15
      Inlet_2.pt = 5600000
      Inlet_3.Tt = 288.15
      Inlet_3.pt = 5700000
      Inlet_4.Tt = 288.15
      Inlet_4.pt = 5600000
      Outlet.Tt = 300
      Outlet.pt = 5700000

   BODY
      -- creates an ASCII file with the results in table format
      -- REPORT_TABLE("results.rpt", "*",TRUE)

      -- set the debug level (valid range [0,4])
      DEBUG_LEVEL= 1   
      -- select default integration solver. Valid methods are IDAS (_SPARSE), DASSL(_SPARSE), CVODE_BDF(_SPARSE), CVODE_AM, RK4, EULER, AM1, AM2 and AM4
      IMETHOD= IDAS -- default is DASSL, recommended is either IDAS or IDAS_SPARSE  
      -- Settings for different actions. Valid actions are: SEV_DISABLE, SEV_NONE, SEV_WARNING, SEV_ERROR, SEV_KILLPOINT, SEV_FATAL
      -- eSetErrorAction(ERR_BAD_OPER,SEV_KILLPOINT) -- Detect bad numerical operations (eg division by zero), default is SEV_NONE, recommended is SEV_KILLPOINT
      -- eSetErrorAction(ERR_NAN_INF, SEV_KILLPOINT) -- Detect NaN or Inf values, default is SEV_NONE, recommended is SEV_KILLPOINT
      eSetConfig(CFG_FORCE_STOP_CINT,TRUE) -- Force or not to stop the solver each CINT. Sometimes you can speed up the simulation if you select FALSE
      -- set tolerances and other important inputs
      REL_ERROR = 1e-06 -- transient solver relative tolerance
      ABS_ERROR = 1e-06 -- transient solver absolute tolerance
      TOLERANCE = 1e-06 -- steady solver relative tolerance
      INIT_INTEG_STEP = -1 -- initial integration step size (-1 means use the solver estimation) 
      MAX_INTEG_STEP = -1 -- maximum integration step size (-1 means use the solver estimation) 
      NSTEPS = 1 -- Only for explicit solvers use CINT/NSTEPS as integration step size
      REPORT_MODE = IS_EVENT -- by default it reports results at every CINT and event detection. Other valid options are IS_STEP, IS_CINT and IS_MANUAL_REFRESH 

      -- simulate a transient in range[TIME,TSTOP] reporting every CINT
      TIME = 0
      TSTOP = 15
      CINT = 0.1
      INTEG()
END EXPERIMENT
